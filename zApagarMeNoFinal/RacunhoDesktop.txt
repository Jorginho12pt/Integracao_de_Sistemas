//AplicacaoDesktop-------------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Net.Http;
using System.Threading.Tasks;
using System.Windows.Forms;
using static AplicacaoDesktop.EnumEx;

namespace AplicacaoDesktop
{
    public partial class Form: System.Windows.Forms.Form
    {
        public SqlConnection con = new SqlConnection(@"Server=localhost\SQLEXPRESS;Database=SistemaDesktop;Integrated Security=True");
        private static readonly HttpClient client = new HttpClient();
        private DesktopTeste teste = new DesktopTeste();

        public Form()
        {
            InitializeComponent();
            textBox_DataHora.Text = DateTime.UtcNow.ToString();
        }


        private async Task button_SendButton_ClickAsync(object sender, EventArgs e)
        {
            if (this.Controls.Cast<Control>().Any(c => (c is System.Windows.Forms.TextBox || c is System.Windows.Forms.ComboBox) && string.IsNullOrEmpty(c.Text)))
            {
                MessageBox.Show("Rafa para de brincar!", "Erro",
                MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {
                try
                {
                    teste.DataHora = DateTime.Parse(textBox_DataHora.Text);
                    teste.CodigoPeca = textBox_CodigoPreco.Text;
                    teste.TempoProduco = TimeSpan.Parse(textBox_TempoProd.Text);
                    teste.ResultadoTeste = GetValueFromDescription <Resposta> (comboBox_RespostaTest.Text);

                    using (con)
                    {
                        using (var cmd = new SqlCommand("INSERT INTO dbo.Teste (DataHora, CodigoPeca, TempoProducao, ResultadoTeste) VALUES (@DataHora,@CodigoPeca,@TempoProducao, @ResultadoTeste)"))
                        {
                            cmd.Connection = con;
                            cmd.Parameters.AddWithValue("@DataHora", DateTime.Parse(textBox_DataHora.Text));
                            cmd.Parameters.AddWithValue("@CodigoPeca", textBox_CodigoPreco.Text);
                            cmd.Parameters.AddWithValue("@TempoProducao", DateTime.Parse(textBox_TempoProd.Text));
                            cmd.Parameters.AddWithValue("@ResultadoTeste", Enum.Parse(typeof(Resposta), comboBox_RespostaTest.Text));

                            con.Open();
                            if (cmd.ExecuteNonQuery() > 0)
                            {
                                MessageBox.Show("Foi gravado na base de dados, amigo");
                            }
                            else
                            {
                                MessageBox.Show("Deu erro");
                            }
                        }
                    }




                    var content = new FormUrlEncodedContent(
                        new Dictionary<string, string>
                        {
                            { "DataHora", teste.DataHora?.ToString("yyyy-MM-dd HH:mm:ss") ?? "N/A" },
                            { "CodigoPeca", teste.CodigoPeca ?? "N/A" },
                            { "TempoProduco", teste.TempoProduco?.ToString() ?? "N/A" },
                            { "ResultadoTeste", teste.ResultadoTeste?.ToString() ?? "N/A" }
                        }   
                    );

                    var response = await client.PostAsync("https://localhost:7252/Api/InsercaoTeste", content);

                    var responseString = await response.Content.ReadAsStringAsync();


                }
                catch (Exception r)
                {
                    MessageBox.Show("Error: " + r.Message);
                }
            }
            
            textBox_DataHora.Text = DateTime.UtcNow.ToString();
        }
    }
}


//Class-------------------------------------------------------------------------------------------------------------------------

using System;

namespace AplicacaoDesktop
{
    class DesktopTeste
    {
        public DateTime? DataHora { get; set; }
        public string CodigoPeca { get; set; }
        public TimeSpan? TempoProduco { get; set; }
        public int? ResultadoTeste { get; set; }
    }
}





// codigo mau porque n√£o usa json--------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Net.Http;
using System.Windows.Forms;
using static AplicacaoDesktop.EnumEx;
using Newtonsoft.Json;

namespace AplicacaoDesktop
{
    public partial class Form: System.Windows.Forms.Form
    {
        public Form()
        {
            InitializeComponent();
            textBox_DataHora.Text = DateTime.UtcNow.ToString();
        }


        private async void button_SendButton_ClickAsync(object sender, EventArgs e)
        {
            if (this.Controls.Cast<Control>().Any(c => (c is System.Windows.Forms.TextBox || c is System.Windows.Forms.ComboBox) && string.IsNullOrEmpty(c.Text)))
            {
                MessageBox.Show("Rafa para de brincar!", "Erro",
                MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {
                using (var client = new HttpClient())
                {
                    try
                    {
                        var content = new FormUrlEncodedContent(
                            new Dictionary<string, string>
                            {
                            { "DataHora", textBox_DataHora.Text },
                            { "CodigoPeca", textBox_CodigoPreco.Text },
                            { "TempoProduco", textBox_TempoProd.Text },
                            { "ResultadoTeste", GetValueFromDescription <Resposta> (comboBox_RespostaTest.Text).ToString() }
                            }
                        );

                        var response = await client.PostAsync("https://localhost:7252/Api/InsercaoTeste", content);
                        var responseString = await response.Content.ReadAsStringAsync();
                        Console.WriteLine(responseString);
                        // MessageBox.Show(responseString);

                    }
                    catch (Exception r)
                    {
                        MessageBox.Show("Error: " + r.Message);
                    }
                }
            }
            
            textBox_DataHora.Text = DateTime.UtcNow.ToString();
        }
    }
}